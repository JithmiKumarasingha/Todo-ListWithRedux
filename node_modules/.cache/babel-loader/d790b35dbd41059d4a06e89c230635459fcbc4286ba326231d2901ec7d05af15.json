{"ast":null,"code":"import { createSlice, nanoid } from \"@reduxjs/toolkit\";\nconst initialState = {\n  todos: []\n};\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const todo = {\n        id: nanoid(),\n        text: action.payload\n      };\n      state.todos.push(todo);\n    },\n    removeTodo: (state, action) => {\n      state.todos = state.todos.filter(todo => todo.id !== action.payload);\n    }\n  }\n});\nexport const {\n  addTodo,\n  removeTodo\n} = todoSlice.actions;\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","nanoid","initialState","todos","todoSlice","name","reducers","addTodo","state","action","todo","id","text","payload","push","removeTodo","filter","actions","reducer"],"sources":["/home/jithmi.kumarasingha/reduxtest/src/features/todoSlice.js"],"sourcesContent":["import { createSlice, nanoid } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  todos: [],\n};\n\nexport const todoSlice = createSlice({\n  name: 'todo',\n  initialState,\n  reducers: {\n    addTodo: (state, action) => {\n      const todo = {\n        id: nanoid(),\n        text: action.payload,\n      };\n      state.todos.push(todo);\n    },\n    removeTodo: (state, action) => {\n      state.todos = state.todos.filter((todo) => todo.id !== action.payload);\n    },\n  },\n});\n\nexport const { addTodo, removeTodo } = todoSlice.actions;\n\nexport default todoSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,MAAM,QAAQ,kBAAkB;AAEtD,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EACnCK,IAAI,EAAE,MAAM;EACZH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC1B,MAAMC,IAAI,GAAG;QACXC,EAAE,EAAEV,MAAM,CAAC,CAAC;QACZW,IAAI,EAAEH,MAAM,CAACI;MACf,CAAC;MACDL,KAAK,CAACL,KAAK,CAACW,IAAI,CAACJ,IAAI,CAAC;IACxB,CAAC;IACDK,UAAU,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACL,KAAK,GAAGK,KAAK,CAACL,KAAK,CAACa,MAAM,CAAEN,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKF,MAAM,CAACI,OAAO,CAAC;IACxE;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEN,OAAO;EAAEQ;AAAW,CAAC,GAAGX,SAAS,CAACa,OAAO;AAExD,eAAeb,SAAS,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}